#!/usr/bin/env python3

import boto3
from botocore.config import Config
import sys
import random
import string
import argparse

def put_object_to_bucket(bucket_name, object_name):
    # Create a Boto3 client for S3 with unsigned configuration
    s3_client = boto3.client(
        's3',
        config=Config(signature_version='s3v4', s3={'addressing_style': 'path'})
    )
    
    # Generate a random string
    random_string = ''.join(random.choices(string.ascii_letters + string.digits, k=20))
    print(f"Random string to upload: {random_string}")

    try:
        # Put the random string into the specified bucket and object
        response = s3_client.put_object(Bucket=bucket_name, Key=object_name, Body=random_string)
        print(f"Object uploaded successfully: {response}")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='''Public S3 bucket object upload tool.

This tool uploads objects to public S3 buckets that allow public write access, using 
unsigned requests to test bucket permissions and configurations. It generates random 
content for testing purposes.

Key use cases:
- Security testing: Test public bucket write permissions
- Bucket configuration validation: Verify bucket access policies
- Penetration testing: Assess bucket security configurations
- Research: Test public bucket capabilities and limitations
- Compliance: Audit public bucket write access

The tool generates random content and attempts to upload it to the specified bucket 
and object key. It's useful for testing bucket permissions and understanding public 
bucket configurations, particularly for security assessment and compliance purposes.''',
        formatter_class=argparse.RawDescriptionHelpFormatter
    )
    parser.add_argument('bucket_name', help='Public S3 bucket name')
    parser.add_argument('object_name', help='Object key name for upload')
    args = parser.parse_args()
    
    bucket_name = args.bucket_name
    object_name = args.object_name
    put_object_to_bucket(bucket_name, object_name)
