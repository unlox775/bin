#!/usr/bin/env python3

import boto3
import sys
import os
import argparse

def list_cognito_pools(region, profile):
    # Set up boto3 session using provided profile
    session = boto3.Session(profile_name=profile, region_name=region)
    
    # Create a client for the Cognito Identity service
    cognito_identity_client = session.client('cognito-identity')
    
    # Get the list of identity pools
    response = cognito_identity_client.list_identity_pools(MaxResults=60) # Maximum allowed by AWS is 60
    
    return response.get('IdentityPools', [])

def main():
    parser = argparse.ArgumentParser(
        description='''AWS Cognito Identity Pool inventory tool.

This tool lists all Cognito Identity Pools in a specified region, providing key information 
about pool IDs and names. It's designed for Cognito service management, user authentication 
audits, and identity provider documentation.

Key use cases:
- Identity pool inventory: List all Cognito Identity Pools in an account
- Authentication audit: Document identity providers and pools
- Application management: Identify pools used by different applications
- Cleanup operations: Find unused or outdated identity pools
- Compliance: Audit identity provider configurations

The tool provides a simple inventory of all Cognito Identity Pools, making it easy to 
understand the scope of user authentication services in your AWS account. It handles 
AWS API pagination limits and provides clear output for each pool.''',
        formatter_class=argparse.RawDescriptionHelpFormatter
    )
    parser.add_argument('region', help='AWS region (default: us-east-1)', nargs='?', default='us-east-1')
    parser.add_argument('profile', help='AWS profile name (default: default)', nargs='?', default='default')
    args = parser.parse_args()

    region = args.region
    profile = args.profile

    os.environ['AWS_PROFILE'] = profile
    os.environ['AWS_REGION'] = region
    
    pools = list_cognito_pools(region, profile)
    
    if not pools:
        print(f"No Cognito Identity Pools found in region {region} for profile {profile}.")
        return
    
    print(f"Cognito Identity Pools in region {region} for profile {profile}:")
    for pool in pools:
        print(f"ID: {pool['IdentityPoolId']}, Name: {pool['IdentityPoolName']}")

if __name__ == '__main__':
    main()
