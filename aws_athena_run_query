#!/usr/bin/env python3
import os
import sys
import boto3
import time
import csv
import signal
from botocore.exceptions import ClientError

def handle_sigint(signum, frame):
    print("Cancelling the query...", file=sys.stderr)
    try:
        response = client.stop_query_execution(QueryExecutionId=query_execution_id)
        print("Query cancelled.", file=sys.stderr)
    except ClientError as e:
        print(f"Error cancelling query: {e}", file=sys.stderr)
    sys.exit(1)

def run_athena_query(client, database, query, s3_output):
    return client.start_query_execution(
        QueryString=query,
        QueryExecutionContext={
            'Database': database
        },
        ResultConfiguration={
            'OutputLocation': s3_output,
        }
    )

def wait_for_query_to_complete(client, query_execution_id):
    while True:
        response = client.get_query_execution(QueryExecutionId=query_execution_id)
        if response['QueryExecution']['Status']['State'] in ['FAILED', 'CANCELLED']:
            raise Exception(f"Query failed to run with error: {response['QueryExecution']['Status']['StateChangeReason']}")
        elif response['QueryExecution']['Status']['State'] == 'SUCCEEDED':
            print("Query completed successfully.", file=sys.stderr)
            return response['QueryExecution']['ResultConfiguration']['OutputLocation']
        time.sleep(5)

def download_and_print_results(s3_path):
    s3 = boto3.client('s3')
    bucket, key = s3_path.replace("s3://", "").split("/", 1)
    obj = s3.get_object(Bucket=bucket, Key=key)
    lines = obj['Body'].read().decode('utf-8').splitlines()
    csv_reader = csv.reader(lines)

    csv_writer = csv.writer(sys.stdout)
    for row in csv_reader:
        csv_writer.writerow(row)

if __name__ == "__main__":
    if len(sys.argv) < 4:
        print("Usage: aws_s3_run_athena_query <aws_profile> <region> <database>", file=sys.stderr)
        sys.exit(1)

    aws_profile, region, database = sys.argv[1:]
    session = boto3.Session(profile_name=aws_profile, region_name=region)
    client = session.client('athena')

    signal.signal(signal.SIGINT, handle_sigint)

    try:
        query = sys.stdin.read()

        # Determine the S3 output bucket for results
        s3_output = os.environ.get('AWS_ATHENA_RESULTS_BUCKET',
                                   f's3://aws-athena-query-results-{session.client("sts").get_caller_identity().get("Account")}-{region}/')

        print("Starting query...", file=sys.stderr)
        result = run_athena_query(client, database, query, s3_output)
        query_execution_id = result['QueryExecutionId']

        result_location = wait_for_query_to_complete(client, query_execution_id)

        # Download results and print to STDOUT
        download_and_print_results(result_location)

    except ClientError as e:
        print(f"An error occurred: {e}", file=sys.stderr)
